{"version":3,"sources":["components/LocationMarker.js","components/LocationInfoBox.js","components/Map.js","assets/earth.gif","components/Loader.js","components/Header.js","App.js","index.js"],"names":["LocationMarker","lat","lng","onClick","className","icon","wildfireIcon","LocationInfoBox","info","id","title","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","markers","map","ev","categories","geometries","coordinates","bootstrapURLKeys","key","process","defaultCenter","defaultZoom","defaultProps","Loader","src","animation","alt","Header","App","setEventData","loading","setLoading","useEffect","a","fetch","res","json","events","fetchEvents","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAYeA,EARQ,SAAC,GAA0B,EAAxBC,IAAwB,EAAnBC,IAAoB,IAAfC,EAAc,EAAdA,QAChC,OACI,qBAAKC,UAAU,kBAAkBD,QAASA,EAA1C,SACI,cAAC,IAAD,CAAME,KAAMC,IAAcF,UAAU,qBCOjCG,EAdS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACI,sBAAKJ,UAAU,gBAAf,UACI,gDACA,+BACI,sCAAQ,iCAAUI,EAAKC,QACvB,yCAAW,iCAAUD,EAAKE,kBCDpCC,EAAM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC9B,EAAwCC,mBAAS,MAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAUN,EAAUO,KAAI,SAAAC,GAC1B,OAA2B,IAAxBA,EAAGC,WAAW,GAAGZ,IAQY,KAAxBW,EAAGC,WAAW,GAAGZ,GAPd,cAAC,EAAD,CAAgBR,IAAKmB,EAAGE,WAAW,GAAGC,YAAY,GACzDrB,IAAKkB,EAAGE,WAAW,GAAGC,YAAY,GAClCpB,QAAS,kBAAMc,EACX,CAAER,GAAIW,EAAGX,GAAIC,MAAOU,EAAGV,WAaxB,QAGX,OACI,sBAAKN,UAAU,MAAf,UACI,cAAC,IAAD,CACIoB,iBAAkB,CAAEC,IAAKC,2CACzBC,cAAgBd,EAChBe,YAAcd,EAHlB,SAKKI,IAEJF,GAAgB,cAAC,EAAD,CAAiBR,KAAMQ,QAKpDL,EAAIkB,aAAe,CACfhB,OAAQ,CACJZ,IAAK,QACLC,KAAM,UAEVY,KAAM,GAIKH,QCpDA,MAA0B,kCCW1BmB,EATA,WACX,OACI,sBAAK1B,UAAU,SAAf,UACI,qBAAK2B,IAAKC,EAAWC,IAAI,wBACzB,mD,iBCOGC,EAVA,WACX,OACI,wBAAQ9B,UAAU,SAAlB,SACI,+BAAI,cAAC,IAAD,CAAMC,KAAMC,MAAhB,kCACI,qBAAKF,UAAU,UAAf,yDCuBD+B,MAzBf,WACE,MAAkCpB,mBAAS,IAA3C,mBAAOH,EAAP,KAAkBwB,EAAlB,KACA,EAA8BrB,oBAAS,GAAvC,mBAAOsB,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,6DAClBF,GAAW,GADO,SAEAG,MAAM,mDAFN,cAEZC,EAFY,gBAGOA,EAAIC,OAHX,gBAGVC,EAHU,EAGVA,OAERR,EAAaQ,GACbN,GAAW,GANO,4CAAH,qDASjBO,KACC,IAGD,gCACE,cAAC,EAAD,IACGR,EAA0C,cAAC,EAAD,IAAhC,cAAC,EAAD,CAAKzB,UAAWA,QCpBnCkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0e4cf626.chunk.js","sourcesContent":["import { Icon } from '@iconify/react'\r\nimport wildfireIcon from '@iconify/icons-mdi/fire-alert'\r\nimport volcanoIcon from '@iconify/icons-mdi/mountain'\r\n\r\nconst LocationMarker = ({ lat, lng, onClick }) => {\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={wildfireIcon} className=\"location-icon\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationMarker\r\n\r\n\r\n","const LocationInfoBox = ({ info }) => {\r\n    return (\r\n        <div className=\"loaction-info\">\r\n            <h2>Weather Event </h2>\r\n            <ul>\r\n                <li>ID: <strong>{ info.id }</strong></li>\r\n                <li>Title: <strong>{ info.title }</strong></li>\r\n                {/*<li>Date: <strong>{ info.date }</strong></li>\r\n                <li>Coordinates: <strong>{ info.title }</strong></li> */}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationInfoBox\r\n","import { useState } from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport LocationMarker from './LocationMarker'\r\nimport LocationInfoBox from './LocationInfoBox'\r\n\r\nconst Map = ({ eventData, center, zoom }) => {\r\n    const [locationInfo, setLocationInfo] = useState(null)  \r\n   \r\n    const markers = eventData.map(ev => {\r\n        if(ev.categories[0].id === 8) {\r\n            return <LocationMarker lat={ev.geometries[0].coordinates[1]} \r\n            lng={ev.geometries[0].coordinates[0]} \r\n            onClick={() => setLocationInfo(\r\n                { id: ev.id, title: ev.title }\r\n                )} \r\n                />\r\n        }\r\n        else if(ev.categories[0].id === 15) {\r\n            return <LocationMarker lat={ev.geometries[0].coordinates[1]} \r\n            lng={ev.geometries[0].coordinates[0]} \r\n            onClick={() => setLocationInfo(\r\n                { id: ev.id, title: ev.title }\r\n                )} \r\n                />\r\n        }\r\n\r\n        return null\r\n    })\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY }}\r\n                defaultCenter={ center }\r\n                defaultZoom={ zoom } >\r\n                \r\n                {markers}\r\n            </GoogleMapReact>\r\n            {locationInfo && <LocationInfoBox info={locationInfo} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 42.3265, \r\n        lng: -122.8756\r\n    }, \r\n    zoom: 0\r\n}\r\n\r\n\r\nexport default Map\r\n","export default __webpack_public_path__ + \"static/media/earth.67c81f97.gif\";","import animation from '../assets/earth.gif'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <img src={animation} alt=\"Loading Application\" />\r\n            <h1>Fetching Data</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import { Icon } from '@iconify/react'\r\nimport wildfireIcon from '@iconify/icons-mdi/earth'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1><Icon icon={wildfireIcon} /> Global Severe Weather Tracking \r\n                <div className=\"credits\">Powered by NASA EONET and Google Maps</div>\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { useState, useEffect } from 'react'\nimport Map from './components/Map'\nimport Loader from './components/Loader'\nimport Header from './components/Header'\n\nfunction App() {\n  const [eventData, setEventData] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true)\n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n      const { events } = await res.json()\n\n      setEventData(events)\n      setLoading(false)\n    }\n\n    fetchEvents()\n  }, [])\n\n  return (\n    <div>\n      <Header />\n      { !loading ? <Map eventData={eventData} /> : <Loader />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}